////////////////////7
hall magnetic
////////////////////

from machine import Pin
import time
from umqtt.simple import MQTTClient

# Configuración de la red WiFi
ssid = "No Paso Internet Ivana"
password = "123456789"
# Configuración del broker MQTT
mqtt_broker = "192.168.40.200"
mqtt_topic = "utng/arg/hall_magnetico"

# Configuración del pin del sensor Hall Magnético
sensor_pin = Pin(14, Pin.IN)  # Pin conectado al sensor Hall Magnético

def connect_wifi():
    import network
    sta_if = network.WLAN(network.STA_IF)
    if not sta_if.isconnected():
        print("Conectando a WiFi...")
        sta_if.active(True)
        sta_if.connect(ssid, password)
        while not sta_if.isconnected():
            pass
    print("Conexión WiFi exitosa")

def connect_mqtt():
    client = MQTTClient("esp32", mqtt_broker)
    client.connect()
    print("Conexión MQTT exitosa")
    return client

def detectar_iman():
    return sensor_pin.value() == 0  # Retorna True si se detecta un imán (valor del pin en bajo)

def main():
    connect_wifi()
    mqtt_client = connect_mqtt()

    while True:
        if detectar_iman():
            print("¡Se ha detectado un imán!")
            mqtt_client.publish(mqtt_topic, b"¡Se ha detectado un imán!")
        time.sleep(1)  # Espera antes de realizar la próxima lectura

if __name__ == "__main__":
    main()



///////////////////////////
json
///////////////////////////

[
    {
        "id": "20a79c9ced5f38f3",
        "type": "tab",
        "label": "Flujo 8",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "54f3892d16295a7f",
        "type": "mqtt in",
        "z": "20a79c9ced5f38f3",
        "name": "",
        "topic": "utng/arg/hall_magnetico",
        "qos": "2",
        "datatype": "auto",
        "broker": "894951dafb5e412e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 160,
        "wires": [
            [
                "c04c07aad2cdaecb",
                "d00d0d261fbc7dd0"
            ]
        ]
    },
    {
        "id": "d00d0d261fbc7dd0",
        "type": "postgresql",
        "z": "20a79c9ced5f38f3",
        "name": "",
        "query": "INSERT INTO iman (mensaje) VALUES ('{{msg.payload}}');",
        "postgreSQLConfig": "9277f660ec41eacb",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 610,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c04c07aad2cdaecb",
        "type": "debug",
        "z": "20a79c9ced5f38f3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 280,
        "wires": []
    },
    {
        "id": "894951dafb5e412e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.40.200",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9277f660ec41eacb",
        "type": "postgreSQLConfig",
        "name": "equipo5",
        "host": "localhost",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "equipo5",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "12345",
        "passwordFieldType": "str"
    }
]
